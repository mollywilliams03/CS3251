{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13300\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CS 3251 Programming Assignment 1\
Molly Williams\
mwilliams401@gatech.edu\
September 22, 2020\
\

\b Files Submitted:
\b0 \
ttweetcl.java - This is my client program. It takes in the information from the client as either an upload or a download.\
\
ttweetsvr.java - This is my server program. It accepts the data from the client and stores it/returns it. \
\
sample.txt - this is an example of how my code works using random examples I have come up with other than the test scenario.\
\
README.pdf - this is the description and instructions of how my code works.\
\
I referenced CodeJava when completing ttweetcl.java and ttweetsvr.java: https://www.codejava.net/java-se/networking/java-socket-server-examples-tcp-ip\
The exact places I referenced the website are mentioned in the source code.\
\

\b Compiling and Running:\

\b0 To compile and run the client program:\
	javac ttweetcl.java\
	java ttweetcl -u <serverIP> <serverport> \'93message\'94 	OR	java ttweetcl -d <serverIP> <serverport>\
For upload and download, respectively.\
\
To compile and run the server program:\
	javac ttweetsvr.java\
	java ttweetsvr <serverport>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 Protocol:
\b0 \
When in download mode, the message sent to the server is \'93-d\'94, signifying that the goal of the the interaction is to download the data. This message will not be saved by the server and will not be returned to the client. This message will be sent right after the socket is opened in download mode. After receiving this message, the server returns either the previous saved message or \'93empty message\'94 to the client where it is printed.\
\
When in upload mode, the message sent to the server is whatever message the client has entered in the request. If the input message is over the character count, no message will be sent to the server and the client will exit. If the message is valid, the server will save it so that it can later be returned through a download call. It is saved at the end of the server request, right before the server returns the message saying the \'93message was successfully uploaded\'94. Then, once this message reaches the client, it is printed.\
\
\

\b Known Limitations/Bugs:
\b0 \
At this point, there are no known limitations or bugs.\
\
\
}